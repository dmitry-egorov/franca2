// print_str["Hello, world!"]
//
// var[dst u32 1024]
//
// var[x u32 123]
// push_str["x = " dst]
// push_str[x      dst]
//
// print_str[1024 -[dst 1024]]
//
// ret[-[fib_at[40] fib_at[30]]]

ret[-[foo[53] 11]]

def[foo[.[x[$ u32]] u32 .[if[==[x 53] ret[+[x 1]]] ret[+[x 2]]]]]

// print["x = " x]
// def[
//     print[.[##] . print_str[istr[##]]]
//     istr [.[##] str .[
//         var[buf u32 1024]
//         var[dst u32 buf ]
//         ## [push_str[arg dst]] // with overloading
//         ret[make_str[buf -[dst buf]]]
//     ]]
// ]

// --- polymorphic functions
// def[
//     test[. . foo[32]]
//     foo [.[x[# any]] . bar[x]]
//     bar [.[x[# u32]] . print_str["u32"]]
//     bar [.[x[# f32]] . print_str["f32"]]
// ]

////////////////////////////////////////
def[fib_at[.[n[$ u32]] u32 .[
    if[==[n 0] ret[0]]
    if[==[n 1] ret[1]]

    var[i  u32 2]
    var[v0 u32 0]
    var[v1 u32 1]
    while[<=[i n] .[
        var[t u32 v1]
         +=[v1 v0]
          =[v0 t ]
         +=[i  1 ]]]

    ret[v1]]]]